{"version":3,"sources":["utils/helpers.js","components/Layout.js","components/Home.js","components/Signup.js","components/Signin.js","components/Activate.js","components/Forgot.js","components/Reset.js","components/Post.js","components/Dashboard.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["getCookie","key","window","cookie","get","authenticate","response","next","value","console","log","data","token","set","expires","localStorage","setItem","JSON","stringify","setLocalStorage","user","isAuth","getItem","parse","signout","remove","removeItem","removeLocalStorage","withRouter","children","match","history","isActive","path","color","className","to","style","cursor","onClick","push","Home","Signup","useState","name","email","password","buttonText","formInputs","setFormInputs","handleChange","evt","target","handleSubmit","preventDefault","axios","post","then","res","toast","success","message","catch","err","error","onChange","type","Signin","Activate","show","values","setValues","useEffect","params","jwt","decode","v","clickSubmit","event","BTN_LABEL","Forgot","passwordForgotForm","Reset","newPassword","resetPasswordLink","placeholder","required","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","props","classes","React","expanded","setExpanded","Card","CardHeader","Avatar","aria-label","action","IconButton","title","subheader","createdAt","CardMedia","image","CardContent","Typography","variant","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Dashboard","users","setUsers","makeApiCall","useCallback","result","length","map","_id","PrivateRoute","Component","rest","render","PublicRoute","restricted","Routes","exact","defaults","baseURL","process","interceptors","request","use","config","headers","Authorization","status","location","href","Promise","reject","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e3e6e2b.chunk.js","sourcesContent":["import cookie from \"js-cookie\";\n\n// set in cookie\nexport const setCookie = (key, value) => {\n  if (window !== \"undefined\") {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n// remove from cookie\nexport const removeCookie = (key) => {\n  if (window !== \"undefined\") {\n    cookie.remove(key, {\n      expires: 1,\n    });\n  }\n};\n// get from cookie such as stored token\n// will be useful when we need to make request to server with token\nexport const getCookie = (key) => {\n  if (window !== \"undefined\") {\n    return cookie.get(key);\n  }\n};\n// set in localstorage\nexport const setLocalStorage = (key, value) => {\n  if (window !== \"undefined\") {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n// remove from localstorage\nexport const removeLocalStorage = (key) => {\n  if (window !== \"undefined\") {\n    localStorage.removeItem(key);\n  }\n};\n// authenticate user by passing data to cookie and localstorage during signin\n// next is the callback function. You can pass any function to be executed\nexport const authenticate = (response, next) => {\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  next();\n};\n// access user info from localstorage\nexport const isAuth = () => {\n  if (window !== \"undefined\") {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n};\n\n// next is the callback function. You can pass any function to be executed\nexport const signout = (next) => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n};\n\nexport const updateUser = (response, next) => {\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\n  if (typeof window !== \"undefined\") {\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\n    auth = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(auth));\n  }\n  next();\n};\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { isAuth, signout } from \"../utils/helpers\";\n\nconst Layout = ({ children, match, history }) => {\n  const isActive = (path) => {\n    if (match.path === path) {\n      return { color: \"#000\" };\n    } else {\n      return { color: \"#fff\" };\n    }\n  };\n\n  const nav = () => (\n    <ul className=\"nav nav-tabs bg-primary\">\n      <li className=\"nav-item\">\n        <Link to=\"/\" className=\"nav-link\" style={isActive(\"/\")}>\n          Home\n        </Link>\n      </li>\n      {!isAuth() && (\n        <>\n          <li className=\"nav-item\">\n            <Link to=\"/signin\" className=\"nav-link\" style={isActive(\"/signin\")}>\n              Signin\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/signup\" className=\"nav-link\" style={isActive(\"/signup\")}>\n              Signup\n            </Link>\n          </li>\n        </>\n      )}\n\n      {isAuth() && (\n        <>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/dashboard\"\n              className=\"nav-link\"\n              style={isActive(\"/dashboard\")}\n            >\n              Dashboard\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <span\n              className=\"nav-link\"\n              style={{ cursor: \"pointer\", color: \"#fff\" }}\n              onClick={() => {\n                signout(() => {\n                  history.push(\"/\");\n                });\n              }}\n            >\n              Signout\n            </span>\n          </li>\n        </>\n      )}\n    </ul>\n  );\n\n  return (\n    <Fragment>\n      {nav()}\n      <div className=\"container\">{children}</div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(Layout);\n","import React from \"react\";\nimport Layout from \"./Layout\";\n\nfunction Home() {\n  return (\n    <Layout className=\"Home\">\n      <h1>Hello React</h1>\n    </Layout>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Layout from \"./Layout\";\n\nconst Signup = () => {\n  const [formInputs, setFormInputs] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    buttonText: \"Submit\",\n  });\n  const { buttonText, name, email, password } = formInputs;\n\n  const handleChange = (evt) => {\n    setFormInputs({\n      ...formInputs,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    // Avoid page refresh\n    evt.preventDefault();\n    setFormInputs({ ...formInputs, buttonText: \"Submitting...\" });\n\n    axios\n      .post(\"/signup\", {\n        name,\n        email,\n        password,\n      })\n      .then((res) => {\n        console.log(\"SIGNED UP SUCCESS!!\", res);\n\n        setFormInputs({\n          name: \"\",\n          password: \"\",\n          email: \"\",\n          buttonText: \"Submit\",\n        });\n\n        toast.success(res.data.message);\n      })\n      .catch((err) => {\n        if (err && err.response && err.response.data) {\n          toast.error(err.response.data.error);\n        }\n\n        setFormInputs({\n          ...formInputs,\n          buttonText: \"Submit\",\n        });\n      });\n  };\n\n  const signupForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Name</label>\n        <input\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Email</label>\n        <input\n          onChange={handleChange}\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Password</label>\n        <input\n          onChange={handleChange}\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmit}\n        >\n          {buttonText}\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"col-md-6 offset-md-3\">\n        <ToastContainer />\n        <h1 className=\"p-5 text-center\">Sign up</h1>\n        {signupForm()}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { authenticate, isAuth } from \"../utils/helpers\";\nimport Layout from \"./Layout\";\n\nconst Signin = ({ history }) => {\n  const [formInputs, setFormInputs] = useState({\n    email: \"\",\n    password: \"\",\n    buttonText: \"Submit\",\n  });\n  const { buttonText, email, password } = formInputs;\n\n  const handleChange = (evt) => {\n    setFormInputs({\n      ...formInputs,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    // Avoid page refresh\n    evt.preventDefault();\n    setFormInputs({ ...formInputs, buttonText: \"Submitting...\" });\n\n    axios\n      .post(\"/signin\", {\n        email,\n        password,\n      })\n      .then((res) => {\n        console.log(\"SIGNED UP SUCCESS!!\", res);\n\n        authenticate(res, () => {\n          setFormInputs({\n            ...formInputs,\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            buttonText: \"Submitted\",\n          });\n          // toast.success(`Hey ${response.data.user.name}, Welcome back!`);\n          isAuth() ? history.push(\"/dashboard\") : history.push(\"/signin\");\n        });\n      })\n      .catch((err) => {\n        if (err && err.response && err.response.data) {\n          toast.error(err.response.data.error);\n        }\n\n        setFormInputs({\n          ...formInputs,\n          buttonText: \"Submit\",\n        });\n      });\n  };\n\n  const signinForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Email</label>\n        <input\n          onChange={handleChange}\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Password</label>\n        <input\n          onChange={handleChange}\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmit}\n        >\n          {buttonText}\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"col-md-6 offset-md-3\">\n        <ToastContainer />\n        <h1 className=\"p-5 text-center\">Signin</h1>\n        {signinForm()}\n        <br />\n        <Link\n          to=\"/auth/password/forgot\"\n          className=\"btn btn-sm btn-outline-danger\"\n        >\n          Forgot Password\n        </Link>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Signin;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Activate = ({ match }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    token: \"\",\n    show: true,\n  });\n\n  useEffect(() => {\n    let token = match.params.token;\n    // console.log(token);\n    if (token) {\n      let { name } = jwt.decode(token);\n      setValues((v) => ({ ...v, name, token }));\n    }\n  }, [match.params.token]);\n\n  const { name, token } = values;\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(\"/account-activation\", { token })\n      .then((response) => {\n        console.log(\"ACCOUNT ACTIVATION\", response);\n        setValues({ ...values, show: false });\n        toast.success(response.data.message);\n      })\n      .catch((error) => {\n        console.log(\"ACCOUNT ACTIVATION ERROR\", error.response.data.error);\n        toast.error(error.response.data.error);\n      });\n  };\n\n  const activationLink = () => (\n    <div className=\"text-center\">\n      <h1 className=\"p-5\">Hey {name}, Ready to activate your account?</h1>\n      <button className=\"btn btn-outline-primary\" onClick={clickSubmit}>\n        Activate Account\n      </button>\n    </div>\n  );\n\n  return (\n    <Layout>\n      <div className=\"col-md-6 offset-md-3\">\n        <ToastContainer />\n        {activationLink()}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Activate;\n","import React, { useState } from \"react\";\nimport Layout from \"./Layout\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst BTN_LABEL = \"Request password reset link\";\n\nconst Forgot = ({ history }) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    buttonText: BTN_LABEL,\n  });\n\n  const { email, buttonText } = values;\n\n  const handleChange = (name) => (event) => {\n    // console.log(event.target.value);\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, buttonText: \"Submitting\" });\n    axios\n      .post(\"forgot-password\", { email })\n      .then((response) => {\n        console.log(\"FORGOT PASSWORD SUCCESS\", response);\n        toast.success(response.data.message);\n        setValues({ ...values, buttonText: BTN_LABEL });\n      })\n      .catch((error) => {\n        console.log(\"FORGOT PASSWORD ERROR\", error.response.data);\n        toast.error(error.response.data.error);\n        setValues({ ...values, buttonText: BTN_LABEL });\n      });\n  };\n\n  const passwordForgotForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Email</label>\n        <input\n          onChange={handleChange(\"email\")}\n          value={email}\n          type=\"email\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\n          {buttonText}\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"col-md-6 offset-md-3\">\n        <ToastContainer />\n        <h1 className=\"p-5 text-center\">Forgot password</h1>\n        {passwordForgotForm()}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Forgot;\n","import React, { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport Layout from \"./Layout\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Reset = ({ match }) => {\n  // props.match from react router dom\n  const [values, setValues] = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset password\",\n  });\n\n  useEffect(() => {\n    let token = match.params.token;\n    let { name } = jwt.decode(token);\n    // console.log(name);\n    if (token) {\n      setValues((v) => ({ ...v, name, token }));\n    }\n  }, [match.params.token]);\n\n  const { name, token, newPassword, buttonText } = values;\n\n  const handleChange = (event) => {\n    setValues({ ...values, newPassword: event.target.value });\n  };\n\n  const clickSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, buttonText: \"Submitting\" });\n    axios\n      .post(\"/reset-password\", { newPassword, resetPasswordLink: token })\n      .then((response) => {\n        console.log(\"RESET PASSWORD SUCCESS\", response);\n        toast.success(response.data.message);\n        setValues({ ...values, buttonText: \"Done\" });\n      })\n      .catch((error) => {\n        console.log(\"RESET PASSWORD ERROR\", error.response.data);\n        toast.error(error.response.data.error);\n        setValues({ ...values, buttonText: \"Reset password\" });\n      });\n  };\n\n  const passwordResetForm = () => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">New Password</label>\n        <input\n          onChange={handleChange}\n          value={newPassword}\n          type=\"password\"\n          className=\"form-control\"\n          placeholder=\"Type new password\"\n          required\n        />\n      </div>\n\n      <div>\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\n          {buttonText}\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"col-md-6 offset-md-3\">\n        <ToastContainer />\n        <h1 className=\"p-5 text-center\">Hey {name}, Type your new password</h1>\n        {passwordResetForm()}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Reset;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            \n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.user.name}\n        subheader={props.user.createdAt}\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"../img/2.jpg\"\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Layout from \"./Layout\";\nimport RecipeReviewCard from './Post';\nconst Dashboard = () => {\n  const [users, setUsers] = useState([]);\n\n  const makeApiCall = useCallback(() => {\n    axios\n      .get(\"users/list-users\")\n      .then((res) => {\n        console.log(\"FETCH USERS SUCCESS!!\", res);\n        setUsers(res.data.result);\n      })\n      .catch((err) => {\n        if (err && err.response && err.response.data) {\n          toast.error(err.response.data.error);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    makeApiCall();\n  }, [makeApiCall]);\n\n  return (\n    <Layout>\n      <div className=\"col-md-6 offset-md-3\">\n        <ToastContainer />\n        \n        <ul>\n          {!users.length ? (\n            <li>No users have signedup.</li>\n          ) : (\n            users.map((user) => <li key={user._id}><RecipeReviewCard user={user}/></li>)\n          )}\n        </ul>\n        <button className=\"btn btn-primary\" onClick={makeApiCall}>\n          Make API Call\n        </button>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuth } from \"../utils/helpers\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuth() ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuth } from \"../utils/helpers\";\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route like login\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuth() && restricted ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport Home from \"../components/Home\";\nimport Signup from \"../components/Signup\";\nimport Signin from \"../components/Signin\";\nimport Activate from \"../components/Activate\";\nimport Forgot from \"../components/Forgot\";\nimport Reset from \"../components/Reset\";\nimport Dashboard from \"../components/Dashboard\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <PublicRoute path=\"/\" exact component={Home} />\n        <PublicRoute restricted path=\"/signup\" exact component={Signup} />\n        <PublicRoute restricted path=\"/signin\" exact component={Signin} />\n        <PublicRoute\n          restricted\n          path=\"/auth/activate/:token\"\n          exact\n          component={Activate}\n        />\n        <PublicRoute\n          restricted\n          path=\"/auth/password/forgot\"\n          exact\n          component={Forgot}\n        />\n        <PublicRoute\n          restricted\n          path=\"/auth/password/reset/:token\"\n          exact\n          component={Reset}\n        />\n        <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Routes from \"./routes/Routes\";\nimport { getCookie, signout } from \"./utils/helpers\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\naxios.interceptors.request.use((config) => {\n  const token = getCookie(\"token\");\n  config.headers.Authorization = token;\n\n  return config;\n});\n\n// null for success, and second parameter cllback for failure\naxios.interceptors.response.use(null, (error) => {\n  if (error.response.status === 401) {\n    signout(() => {\n      window.location.href = \"/\";\n    });\n  }\n\n  return Promise.reject(error);\n});\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}